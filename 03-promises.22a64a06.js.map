{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAnCAQ,SAASC,cAAc,SAC/BC,iBAAiB,UACtB,SAAoBC,GAClBA,EAAIC,iBAEJ,MACEZ,OAASa,MAAOC,GAChBC,MAAQF,MAAOE,GACfC,QAAUH,MAAOG,IACfL,EAAIM,cAAcC,SAEtB,IAAIC,EAAWC,OAAON,GACtB,IAAK,IAAIO,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChCvB,EAAcuB,EAAGF,GACdG,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEhEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAEhEmB,GAAYC,OAAOL,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector(`.form`);\nform.addEventListener(`submit`, addPromise);\nfunction addPromise(evt) {\n  evt.preventDefault();\n  // console.log(evt.currentTarget.elements.delay.value)\n  const {\n    delay: { value: delay },\n    step: { value: step },\n    amount: { value: amount },\n  } = evt.currentTarget.elements;\n  // console.log(delay)\n  let newDelay = Number(delay);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    newDelay += Number(step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        fulfill({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","value","delay1","step","amount","currentTarget","elements","newDelay","Number","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.22a64a06.js.map"}