{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAnCMQ,SAASC,cAAe,SAChCC,iBAAkB,UACvB,SAAoBC,GAClBA,EAAIC,iBASJ,IAPA,IAIIC,EAAAF,EAAIG,cAAcC,SAHXC,EAGPH,EAHFb,MAASiB,MACDC,EAENL,EAFFK,KAAQD,MACEE,EACRN,EADFM,OAAUF,MAGRG,EAAWC,OAAOL,GACbM,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCxB,EAAcwB,EAAGF,GACdG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBJ,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9DoB,GAAYC,OAAOH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector(`.form`);\nform.addEventListener(`submit`, addPromise);\nfunction addPromise(evt) {\n  evt.preventDefault();\n  // console.log(evt.currentTarget.elements.delay.value)\n  const {\n    delay: { value: delay },\n    step: { value: step },\n    amount: { value: amount },\n  } = evt.currentTarget.elements;\n  // console.log(delay)\n  let newDelay = Number(delay);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    newDelay += Number(step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        fulfill({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","value","step","amount","newDelay","Number","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6d65fb2b.js.map"}